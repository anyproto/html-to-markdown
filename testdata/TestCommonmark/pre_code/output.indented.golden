`last_30_days`

``with backtick (`)``

```with backtick (``)```

`````here are three ``` here are four ```` here is one ` that's it`````

`` `starting & ending with a backtick` ``

Who ate the most donuts this week?

```foo+bar
Jeff  15
Sam   11
Robin  6
```

```
// Fprint formats using the default formats for its operands and writes to w.
// Spaces are added between operands when neither is a string.
// It returns the number of bytes written and any write error encountered.
func Fprint(w io.Writer, a ...interface{}) (n int, err error) {
```

When `x = 3`, that means `x + 2 = 5`

The `<img>` tag is used to embed an image.

The `` tag is used to embed an image.

Two variables `A` `B`

CSS: `
body {
    color: yellow;
    font-size: 16px;
}
`

CSS: `
body {
    color: yellow;
    font-size: 16px;
}
`

````
```
````

```
~~~
```

```

Some ~~~
totally ~~~~~~ normal
~ code

```

```

The <img> tag is used to embed an image.

The  tag is used to embed an image.

```

```


        One
        Two
        Three


```

```



```

We can do this like so:

```js
window.location.pathname.split("/");
// ["", "blog", "javascript", "how-to-get-the-last-segment-of-a-url-in-javascript", ""]
```

* * *

```js
function fn() {
    x = 1;
    return x;
    // eslint-disable-next-line no-unreachable
    x = 3;
}
```

* * *

```
<p><span>Some text</span></p>

```

Copy to Clipboard

* * *

#### HTML:

```
<p>Using CSS to change the font color is easy.</p>
<pre>
body {
color: red;
}
</pre>

```

Copy to Clipboard

* * *

```md
---
title: "Hello! This is the markdown file"
date: 2021-09-25
tags: ["react"]
---

Content of the post goes here.

![Image with alt text](./image.png)
```

* * *

```markup
<code class="language-css">p { color: red }</code>
```

* * *

The function `selectAll()` highlights all the text in the
input field so the user can, for example, copy or delete the text.

The **`<pre>`** [HTML](http://example.com/en-US/docs/Web/HTML) element represents preformatted text.

* * *

```

This is the content:
_code_
_pre_
Cool!

```

* * *

A simple equation: x = y \+ 2

When the process is complete, the utility will output the text
`Scan complete. Found N results.` You can then
proceed to the next step.

Use the command `help mycommand` to view documentation
for the command "mycommand".

The telnet client should display: `Local Echo is on`

The operator `(#)` takes a bit `x` and a
sequence `a` and produces a new sequence `x # a` with
`x` as the head and `a` as the tail (very much like the
built-in operation `(:)` for lists):